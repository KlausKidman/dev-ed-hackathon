version: '3.3'

services:
  upstream:
    image: nginx
    restart: unless-stopped
    volumes:
    - ./configs/nginx.conf:/etc/nginx/nginx.conf
    ports:
    - "8000:80"
  api:
    image: registry.gitlab.com/tokend/api:4d34a6e7e80a7a6ed0a0d471824f29e3ac38c177
    restart: unless-stopped
    depends_on:
      - horizon
      - api_db
      - doorman
    environment:
      - KV_VIPER_FILE=/config.yaml
      - POSTGRES_USER=api
      - DBHOST=api_db
    volumes:
      - ./configs/api.yaml:/config.yaml
  api_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=api
      - POSTGRES_PASSWORD=api
      - POSTGRES_DB=api
      - PGDATA=/pgdata
    volumes:
      - api-data:/pgdata
    labels:
      - "traefik.enabled=false"
  doorman:
    image: registry.gitlab.com/tokend/accounts-ingester-svc:e1d439d65ddf0ad8ffc3af4be2f26a436f65db35
    restart: unless-stopped
    depends_on:
      - horizon
      - doorman_db
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/doorman.yaml:/config.yaml
    entrypoint: sh -c "accounts-ingester-svc migrate up && accounts-ingester-svc run"
  doorman_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=doorman
      - POSTGRES_PASSWORD=doorman
      - POSTGRES_DB=doorman
      - PGDATA=/pgdata
    volumes:
      - doorman-data:/pgdata
    labels:
      - "traefik.enabled=false"
  traefik:
    image: traefik:v2.0
    ports:
      - "80:80"
      - "8001:80"
      - "8080:8080"
    volumes:
      # - /var/run/docker.sock:/var/run/docker.sock
      - ./configs/traefik.yaml:/traefik.yaml
  cop:
    image: registry.gitlab.com/tokend/traefik-cop:fec7ae95c2395f99c6e570612e6220bf368da016
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/cop.yaml:/config.yaml
    entrypoint: sh -c "traefik-cop run"
  redis:
    image: redis:5.0-alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    command:
      - redis-server
      - --appendonly
      - "yes"
  core:
    image: registry.gitlab.com/tokend/go-core:f329b9689e324bd9bcd1589e4f77ec812e3e729d
    depends_on:
      - core_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=core
      - DBHOST=core_db
      - KV_VIPER_FILE=config.yaml
    volumes:
      - ./configs/core.yaml:/config.yaml
    labels:
      - "autoheal=true"
  horizon:
    image: registry.gitlab.com/tokend/ingester:608aea938b33d11f89c7c9fbf80311a95701ccfb
    depends_on:
      - core
      - horizon_db
    restart: unless-stopped
    environment:
      - INGESTER_POSTGRES_USER=horizon
      - CORE_POSTGRES_USER=core
      - INGESTER_DBHOST=horizon_db
      - CORE_DBHOST=core_db
      - KV_VIPER_FILE=config.yaml
    volumes:
      - ./configs/horizon.yaml:/config.yaml
      - horizon-data:/data
  core_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=core
      - POSTGRES_PASSWORD=core
      - POSTGRES_DB=core
      - PGDATA=/pgdata
    volumes:
      - core-data:/pgdata
    labels:
      - "traefik.enabled=false"
  horizon_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=horizon
      - POSTGRES_PASSWORD=horizon
      - POSTGRES_DB=horizon
      - PGDATA=/pgdata
    volumes:
      - horizon-data:/pgdata
    labels:
      - "traefik.enabled=false"
  initscripts:
    image: khramov/terraform-provider-tokend:0.0.4
    depends_on:
      - horizon
      - storage
    restart: on-failure
    volumes:
      - ./terraform:/opt/config
    entrypoint: ""
    command: /opt/config/apply.sh
  storage:
    image: minio/minio:RELEASE.2019-01-31T00-31-19Z
    restart: unless-stopped
    entrypoint: "sh"
    command: -c "mkdir -p /data/tfstate && minio server /data"
    environment:
      - MINIO_ACCESS_KEY=miniominio
      - MINIO_SECRET_KEY=sekritsekrit
      - MINIO_BROWSER=off
    volumes:
      - storage-data:/data

  #Conto related
  #TODO FIXME proxy payments must be ported, as marketplace depends on it 
  marketplace:
    image: registry.gitlab.com/tokend/marketplace-svc:5a3cf1d5150dcfe4b61966fd4d92e82a855f2e26
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
      - marketplace_db
    volumes:
      - ./configs/marketplace.yaml:/config.yaml
    entrypoint: sh -c "marketplace-svc migrate up && marketplace-svc run"
  marketplace_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=marketplace
      - POSTGRES_PASSWORD=marketplace
      - POSTGRES_DB=marketplace
      - PGDATA=/pgdata
    volumes:
      - marketplace-data:/pgdata

  ## 3rd party

  autoheal:
    image: willfarrell/autoheal
    restart: unless-stopped
    environment:
      - AUTOHEAL_START_PERIOD=60
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  adks-data:
  api-data:
  core-data:
  horizon-data:
  storage-data:
  redis-data:
  doorman-data:
  marketplace-data:

