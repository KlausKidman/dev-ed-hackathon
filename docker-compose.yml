version: '3.3'

services:
  janus:
    image: tokend/janus:latest
    restart: unless-stopped
    volumes:
      - ./configs/janus.toml:/etc/janus/janus.toml
  upstream:
    image: nginx
    restart: unless-stopped
    volumes:
    - ./configs/nginx.conf:/etc/nginx/nginx.conf
    ports:
    - "8000:80"
  # adks:
  #   image: tokend/adks:1.0.0
  #   restart: unless-stopped
  #   depends_on:
  #     - keys-horizon
  #     - adks_db
  #   ports:
  #     - 8006:80
  #   volumes:
  #     - ./configs/adks.toml:/config.toml
  # adks_db:
  #   image: tokend/postgres-ubuntu:9.6
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=adks
  #     - POSTGRES_PASSWORD=adks
  #     - POSTGRES_DB=adks
  #     - PGDATA=/pgdata
  #   volumes:
  #     - adks-data:/pgdata
  accounts-ingester:
    image: registry.gitlab.com/tokend/accounts-ingester-svc:ecfda70790f89599388d623cece82deb1061d3b7
    restart: unless-stopped
    depends_on:
      - keys-horizon
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/accounts-ingester.yaml:/config.yaml
    entrypoint: sh -c "accounts-ingester-svc migrate up && accounts-ingester-svc run"
    ports:
      - 2323:80
  ingester_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=ingester
      - POSTGRES_PASSWORD=ingester
      - POSTGRES_DB=ingester
      - PGDATA=/data/pgdata
    volumes:
      - ingester-data:/data
  keys-core:
    image: registry.gitlab.com/tokend/core:keys-89341e374846a4b21c9c8e232a5b2766c038bcb3
    depends_on:
      - janus
    restart: unless-stopped
    environment:
      - POSTGRES_USER=core
      - POSTGRES_PASSWORD=core
      - POSTGRES_DB=core
      - PGDATA=/data/pgdata
      - ENSUREDB=1
      - CONFIG=/core-config.ini
    volumes:
      - ./configs/keys-core.toml:/core-config.ini
      - keys-data:/data
    labels:
      - "autoheal=true"
    ports:
      - 9070:8080
  keys-horizon:
    image: registry.gitlab.com/tokend/horizon:pg-c53bdaa164e14a922b9ef18821ab6e0a44d47297
    depends_on:
      - keys-core
    restart: unless-stopped
    environment:
      - POSTGRES_USER=horizon
      - POSTGRES_PASSWORD=horizon
      - POSTGRES_DB=horizon
      - PGDATA=/data/pgdata
    volumes:
      - ./configs/keys-horizon.yaml:/config.yaml
      - keys-horizon-data:/data
    ports:
      - 9090:80
  assets-core:
    image: registry.gitlab.com/tokend/core:assets-67eca6bf063fc2be4176c64668aad800edfa36de
    depends_on:
      - janus
      - accounts-ingester
    restart: unless-stopped
    environment:
      - POSTGRES_USER=core
      - POSTGRES_PASSWORD=core
      - POSTGRES_DB=core
      - PGDATA=/data/pgdata
      - ENSUREDB=1
      - CONFIG=/core-config.ini
    volumes:
      - ./configs/assets-core.toml:/core-config.ini
      - assets-data:/data
    labels:
      - "autoheal=true"
    ports:
      - 9060:8080
  assets-horizon:
    image: registry.gitlab.com/tokend/horizon:pg-5513316ae63ddb72473f8b48d920948ad5b00dea
    depends_on:
      - assets-core
    restart: unless-stopped
    environment:
      - POSTGRES_USER=horizon
      - POSTGRES_PASSWORD=horizon
      - POSTGRES_DB=horizon
      - PGDATA=/data/pgdata
    volumes:
      - ./configs/assets-horizon.yaml:/config.yaml
      - assets-horizon-data:/data
    ports:
      - 9080:80
  # api:
  #   image: tokend/identity:4.5.0-x.0
  #   restart: unless-stopped
  #   depends_on:
  #     - keys-horizon
  #     # - assets-horizon
  #     - api_db
  #   environment:
  #     - KV_VIPER_FILE=/config.yaml
  #   volumes:
  #     - ./configs/api.yml:/config.yaml
  #   command: run
  # api_db:
  #   image: tokend/postgres-ubuntu:9.6
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=api
  #     - POSTGRES_PASSWORD=api
  #     - POSTGRES_DB=api
  #     - PGDATA=/pgdata
  #   volumes:
  #     - api-data:/pgdata
  terraform-keys:
    image: provider-keys:642843a51fb2e275449b27cdcbf35ddf4bffe3d5
    depends_on:
      - keys-horizon
      - storage
    restart: on-failure
    volumes:
      - ./terraform-keys:/opt/config
    entrypoint: ""
    command: /opt/config/apply.sh
  terraform-assets:
    image: provider-assets:c6d6f3c7ae4436f6bed72decd0ea0dcad7d6b0e2
    depends_on:
      - assets-horizon
      - storage
    restart: on-failure
    volumes:
      - ./terraform-assets:/opt/config
    entrypoint: ""
    command: /opt/config/apply.sh
  # web_client:
  #   image: tokend/web-client:1.10.0-rc.0
  #   restart: unless-stopped
  #   volumes:
  #     - ./configs/client.js:/usr/share/nginx/html/static/env.js
  #   ports:
  #     - 8060:80
  # admin_client:
  #   image: tokend/admin-client:1.10.0-rc.1
  #   restart: unless-stopped
  #   volumes:
  #     - ./configs/client.js:/usr/share/nginx/html/static/env.js
  #   ports:
  #     - 8070:80
  storage:
    image: minio/minio:RELEASE.2019-01-31T00-31-19Z
    restart: unless-stopped
    entrypoint: "sh"
    command: -c "mkdir -p /data/tfstate && minio server /data"
    environment:
      - MINIO_ACCESS_KEY=miniominio
      - MINIO_SECRET_KEY=sekritsekrit
      - MINIO_BROWSER=off
    volumes:
      - storage-data:/data

  ##
  ## Auxiliary modules
  ##

  # charts:
  #   image: tokend/charts:0.4.1
  #   restart: unless-stopped
  #   environment:
  #     - KV_VIPER_FILE=/config.yaml
  #   volumes:
  #     - ./configs/charts.yaml:/config.yaml
  #   ports:
  #     - 8080:8080
  #   command: run
  # salecloser:
  #   image: tokend/sale-closer-svc:1.0.1
  #   depends_on:
  #     - assets-horizon
  #   restart: unless-stopped
  #   volumes:
  #     - ./configs/salecloser.yaml:/config.yaml
  #   environment:
  #     - KV_VIPER_FILE=/config.yaml
  #   command: "run"
  # poll_closer:
  #   image: tokend/poll-closer:0.1.1
  #   restart: unless-stopped
  #   environment:
  #     - KV_VIPER_FILE=/config.yaml
  #   volumes:
  #     - ./configs/poll-closer.yaml:/config.yaml
  #   command: run closer

  ## 3rd party

  autoheal:
    image: willfarrell/autoheal
    restart: unless-stopped
    environment:
      - AUTOHEAL_START_PERIOD=60
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # ##
  # ## Integration services
  # ##

  # ## Coinpayments

  # coinpayments-deposit:
  #   image: tokend/coinpayments:0.4.0
  #   restart: unless-stopped
  #   environment:
  #     - KV_VIPER_FILE=/config.yaml
  #   volumes:
  #     - ./configs/coinpayments-deposit.yaml:/config.yaml
  #   command: deposit
  # coinpayments-deposit-verify:
  #   image: tokend/coinpayments:0.4.0
  #   restart: unless-stopped
  #   environment:
  #     - KV_VIPER_FILE=/config.yaml
  #   volumes:
  #     - ./configs/coinpayments-deposit-verify.yaml:/config.yaml
  #   command: deposit-verify
  # coinpayments-withdraw:
  #   image: tokend/coinpayments:0.4.0
  #   restart: unless-stopped
  #   environment:
  #     - KV_VIPER_FILE=/config.yaml
  #   volumes:
  #     - ./configs/coinpayments-withdraw.yaml:/config.yaml
  #   command: withdraw
  # coinpayments-atomic-swap-checker:
  #   image: tokend/coinpayments:0.4.2
  #   restart: unless-stopped
  #   environment:
  #     - KV_VIPER_FILE=/config.yaml
  #   volumes:
  #     - ./configs/coinpayments-atomic-swap-checker.yaml:/config.yaml
  #   command: atomic-swap-checker
  # coinpayments-atomic-swap-matcher:
  #   image: tokend/coinpayments:0.4.2
  #   restart: unless-stopped
  #   environment:
  #     - KV_VIPER_FILE=/config.yaml
  #   volumes:
  #     - ./configs/coinpayments-atomic-swap-matcher.yaml:/config.yaml
  #   command: atomic-swap-matcher

volumes:
  adks-data:
  api-data:
  keys-data:
  assets-data:
  keys-horizon-data:
  assets-horizon-data:
  ingester-data:
  storage-data:
