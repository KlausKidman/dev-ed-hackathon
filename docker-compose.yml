version: '3.3'

services:
  janus:
    image: tokend/janus:latest
    restart: unless-stopped
    volumes:
      - ./configs/janus.toml:/etc/janus/janus.toml
  upstream:
    image: nginx
    restart: unless-stopped
    volumes:
    - ./configs/nginx.conf:/etc/nginx/nginx.conf
    ports:
    - "8000:80"
  adks:
    image: tokend/adks:1.0.0
    restart: unless-stopped
    depends_on:
      - horizon
      - adks_db
    ports:
      - 8006:80
    volumes:
      - ./configs/adks.toml:/config.toml
  adks_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=adks
      - POSTGRES_PASSWORD=adks
      - POSTGRES_DB=adks
      - PGDATA=/pgdata
    volumes:
      - adks-data:/pgdata
  core:
    image: tokend/core:3.6.2
    depends_on:
      - janus
    restart: unless-stopped
    environment:
      - POSTGRES_USER=core
      - POSTGRES_PASSWORD=core
      - POSTGRES_DB=core
      - PGDATA=/data/pgdata
      - ENSUREDB=1
      - CONFIG=/core-config.ini
    volumes:
      - ./configs/core.ini:/core-config.ini
      - core-data:/data
    labels:
      - "autoheal=true"
  horizon:
    image: tokend/horizon:3.7.0
    depends_on:
      - core
    restart: unless-stopped
    environment:
      - POSTGRES_USER=horizon
      - POSTGRES_PASSWORD=horizon
      - POSTGRES_DB=horizon
      - PGDATA=/data/pgdata
    volumes:
      - ./configs/horizon.yaml:/config.yaml
      - horizon-data:/data
    ports:
      - 8001:80
  api:
    image: tokend/identity:4.5.4
    restart: unless-stopped
    depends_on:
      - horizon
      - api_db
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/api.yml:/config.yaml
    command: run
  api_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=api
      - POSTGRES_PASSWORD=api
      - POSTGRES_DB=api
      - PGDATA=/pgdata
    volumes:
      - api-data:/pgdata
  initscripts:
    image: tokend/terraform-provider-tokend:1.2.0
    depends_on:
      - horizon
      - storage
    restart: on-failure
    volumes:
      - ./terraform:/opt/config
    entrypoint: ""
    command: /opt/config/apply.sh
  conto_client:
    image: tokendconto/web-client:1.4.0
    restart: unless-stopped
    volumes:
      - ./configs/conto.js:/usr/share/nginx/html/static/env.js
    ports:
      - 8060:80
  admin_client:
    image: tokendconto/admin-panel:1.1.0-rc.0
    restart: unless-stopped
    volumes:
      - ./configs/client.js:/usr/share/nginx/html/static/env.js
    ports:
      - 8070:80
  storage:
    image: minio/minio:RELEASE.2019-01-31T00-31-19Z
    restart: unless-stopped
    entrypoint: "sh"
    command: -c "mkdir -p /data/tfstate && minio server /data"
    environment:
      - MINIO_ACCESS_KEY=miniominio
      - MINIO_SECRET_KEY=sekritsekrit
      - MINIO_BROWSER=off
    volumes:
      - storage-data:/data
  dns:
    image: tokend/dns:0.3.3
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
      - dns_db
    volumes:
      - ./configs/dns.yaml:/config.yaml
    entrypoint: sh -c "dns-svc migrate up && dns-svc run"
  dns_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=dns
      - POSTGRES_PASSWORD=dns
      - POSTGRES_DB=dns
      - PGDATA=/pgdata
    volumes:
      - dns-data:/pgdata

  sponsorship:
    image: tokend/sponsor:0.2.0
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
      - sponsorship_db
    volumes:
      - ./configs/sponsorship.yaml:/config.yaml
    entrypoint: sh -c "sponsor-svc migrate up && sponsor-svc run sponsorship"

  sponsorship_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=sponsorship
      - POSTGRES_PASSWORD=sponsorship
      - POSTGRES_DB=sponsorship
      - PGDATA=/pgdata
    volumes:
      - sponsorship-data:/pgdata

  csv:
    image: tokend/csv:0.1.1
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
    volumes:
      - ./configs/csv.yaml:/config.yaml
    entrypoint: sh -c "csv-svc run csvproxy"

  asset_remover:
    image: tokend/asset-remover-svc:0.1.1
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
    volumes:
      - ./configs/asset-remover.yaml:/config.yaml
    entrypoint: sh -c "asset-remover-svc run assetchecker"

  proxy_payments:
    image: tokend/proxy-payments:0.2.1
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
      - proxy_payments_db
    volumes:
      - ./configs/proxy-payments.yaml:/config.yaml
    entrypoint: sh -c "proxy-payments-svc migrate up && proxy-payments-svc run"
  proxy_payments_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=proxy_payments
      - POSTGRES_PASSWORD=proxy_payments
      - POSTGRES_DB=proxy_payments
      - PGDATA=/pgdata
    volumes:
      - proxy-payments-data:/pgdata

  marketplace:
    image: tokend/marketplace-svc:0.3.1
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
      - marketplace_db
    volumes:
      - ./configs/marketplace.yaml:/config.yaml
    entrypoint: sh -c "marketplace-svc migrate up && marketplace-svc run"
  marketplace_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=marketplace
      - POSTGRES_PASSWORD=marketplace
      - POSTGRES_DB=marketplace
      - PGDATA=/pgdata
    volumes:
      - marketplace-data:/pgdata


## Escrow
  
  escrow:
    image: registry.gitlab.com/tokend/escrow-svc:7fd100e1dceb549d1a7849a5f0bde6d07e54aeca
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/escrow.yaml:/config.yaml
    entrypoint: sh -c "escrow-svc migrate up && escrow-svc run"
    depends_on:
      - escrow_db
      - api
  escrow_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=escrow
      - POSTGRES_PASSWORD=escrow
      - POSTGRES_DB=escrow
      - PGDATA=/pgdata
    volumes:
      - escrow-data:/pgdata



  ## Booking

  scheduler:
    image: registry.gitlab.com/tokend/scheduler-svc:c978e54aaad027193291d92ebe08ba21b911eb61
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/scheduler.yaml:/config.yaml
    entrypoint: sh -c "scheduler migrate up && scheduler run"
    ports:
      - 8005:80
    depends_on:
      - scheduler_db
      - api
  scheduler_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=scheduler
      - POSTGRES_PASSWORD=scheduler
      - POSTGRES_DB=scheduler
      - PGDATA=/pgdata
    volumes:
      - scheduler-data:/pgdata
  booking:
    image: registry.gitlab.com/tokend/booking-svc:313d73b8afca56e93e6018b2605b717f2a757a4a
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/booking.yaml:/config.yaml
    entrypoint: sh -c "booking-svc migrate up && booking-svc run"
    ports:
      - 8002:80
    depends_on: 
      - booking_db
      - scheduler
      - api
  booking_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=booking
      - POSTGRES_PASSWORD=booking
      - POSTGRES_DB=booking
      - PGDATA=/pgdata
    volumes:
      - booking-data:/pgdata


  ## 3rd party

  autoheal:
    image: willfarrell/autoheal
    restart: unless-stopped
    environment:
      - AUTOHEAL_START_PERIOD=60
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  ##
  ## Integration services
  ##

  notificator:
    image: tokend/notificator:0.5.1
    restart: unless-stopped
    depends_on:
      - horizon
      - notificator_db
    volumes:
      - ./configs/notificator.yaml:/config.yaml
    command:
      - "notificator"
      - "--config"
      - "/config.yaml"
      - "--migrations"
      - "/migrations"
      - "run"
  notificator_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=notificator
      - POSTGRES_PASSWORD=notificator
      - POSTGRES_DB=notificator
      - PGDATA=/pgdata
    volumes:
      - notificator-data:/pgdata
  templatesprovider:
    image: tokend/templates-svc:1.0.0
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/templatesprovider.yaml:/config.yaml
    command:
      - 'run'
      - 'service'

volumes:
  adks-data:
  api-data:
  core-data:
  horizon-data:
  storage-data:
  dns-data:
  notificator-data:
  proxy-payments-data:
  marketplace-data:
  sponsorship-data:
  scheduler-data:
  booking-data:
  escrow-data:
