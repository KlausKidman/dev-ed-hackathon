version: '3.3'

services:
  traefik:
    image: traefik:v2.0
    ports:
      - "80:80"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./configs/traefik.yaml:/traefik.yaml
  cop:
    image: tokend/traefik-cop:1.0.0
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/cop.yaml:/config.yaml
    entrypoint: sh -c "traefik-cop run"
  errors:
    image: tokend/error-handler-svc:0.0.1
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/errors.yaml:/config.yaml
    entrypoint: sh -c "error-handler-svc run service"
  upstream:
    image: nginx
    restart: unless-stopped
    volumes:
    - ./configs/nginx.conf:/etc/nginx/nginx.conf
    ports:
    - "8000:80"
    labels:
    - "traefik.frontend.passHostHeader=true"
  adks:
    image: tokend/adks:1.0.0
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    depends_on:
      - horizon
      - adks_db
    ports:
      - 8006:80
    volumes:
      - ./configs/adks.toml:/config.toml
  adks_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    environment:
      - POSTGRES_USER=adks
      - POSTGRES_PASSWORD=adks
      - POSTGRES_DB=adks
      - PGDATA=/pgdata
    volumes:
      - adks-data:/pgdata
  redis:
    image: redis:5.0-alpine
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    volumes:
      - redis-data:/data
    command:
      - redis-server
      - --appendonly
      - "yes"
  core:
    image: tokend/core:3.6.5-rc.0
    depends_on:
      - traefik
    restart: unless-stopped
    environment:
      - POSTGRES_USER=core
      - POSTGRES_PASSWORD=core
      - POSTGRES_DB=core
      - PGDATA=/data/pgdata
      - ENSUREDB=1
      - CONFIG=/core-config.ini
    volumes:
      - ./configs/core.ini:/core-config.ini
      - core-data:/data
    labels:
      - "autoheal=true"
      - "traefik.enabled=false"
  horizon:
    image: registry.gitlab.com/tokend/horizon:pg-d8ea9c30ab1990c828391bb1dd6f426862cd287a
    depends_on:
      - core
    restart: unless-stopped
    environment:
      - POSTGRES_USER=horizon
      - POSTGRES_PASSWORD=horizon
      - POSTGRES_DB=horizon
      - PGDATA=/data/pgdata
    volumes:
      - ./configs/horizon.yaml:/config.yaml
      - horizon-data:/data

  api:
    image: tokend/identity:4.5.5-rc.0
    restart: unless-stopped
    depends_on:
      - horizon
      - api_db
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/api.yml:/config.yaml
    command: run
  api_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    environment:
      - POSTGRES_USER=api
      - POSTGRES_PASSWORD=api
      - POSTGRES_DB=api
      - PGDATA=/pgdata
    volumes:
      - api-data:/pgdata
  initscripts:
    image: tokend/terraform-provider-tokend:1.3.0
    labels:
      - "traefik.enabled=false"
    depends_on:
      - horizon
      - storage
    restart: on-failure
    volumes:
      - ./terraform:/opt/config
    entrypoint: ""
    command: /opt/config/apply.sh
  web_client:
    image: tokend/web-client:1.11.0-rc.0
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    volumes:
      - ./configs/client.js:/usr/share/nginx/html/static/env.js
    ports:
      - 8060:80
  admin_client:
    image: tokend/admin-client:1.12.0-rc.3
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    volumes:
      - ./configs/client.js:/usr/share/nginx/html/static/env.js
    ports:
      - 8070:80
  storage:
    image: minio/minio:RELEASE.2019-01-31T00-31-19Z
    restart: unless-stopped
    entrypoint: "sh"
    labels:
      - "traefik.enabled=false"
    command: -c "mkdir -p /data/tfstate && minio server /data"
    environment:
      - MINIO_ACCESS_KEY=miniominio
      - MINIO_SECRET_KEY=sekritsekrit
      - MINIO_BROWSER=off
    volumes:
      - storage-data:/data
  nft-svc:
    image: registry.gitlab.com/tokend/nft-svc:b2c22a7bb1e21a53c06d9050e36351c08d0e42a5
    restart: unless-stopped
    entrypoint: sh -c "nft-svc migrate up && nft-svc run"
    depends_on:
      - horizon
      - nft_svc_db
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/nft-svc.yaml:/config.yaml

  nft_svc_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    environment:
      - POSTGRES_USER=nft
      - POSTGRES_PASSWORD=nft
      - POSTGRES_DB=nft
      - PGDATA=/pgdata
    volumes:
      - nft-data:/pgdata

  ##
  ## Auxiliary modules
  ##

  charts:
    image: tokend/charts:0.4.2-rc.1
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/charts.yaml:/config.yaml
    ports:
      - 8080:8080
    command: run
  salecloser:
    image: tokend/sale-closer-svc:1.0.1
    depends_on:
      - horizon
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    volumes:
      - ./configs/salecloser.yaml:/config.yaml
    environment:
      - KV_VIPER_FILE=/config.yaml
    command: "run"
  poll_closer:
    image: tokend/poll-closer:0.1.1
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/poll-closer.yaml:/config.yaml
    command: run closer
  marketplace:
    image: registry.gitlab.com/tokend/marketplace-svc:a4525032e98e00f0bd83d13995d7b90b2c887d16
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    depends_on:
      - horizon
      - marketplace_db
    volumes:
      - ./configs/marketplace.yaml:/config.yaml
    entrypoint: sh -c "marketplace-svc migrate up && marketplace-svc run"
  marketplace_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=marketplace
      - POSTGRES_PASSWORD=marketplace
      - POSTGRES_DB=marketplace
      - PGDATA=/pgdata
    volumes:
      - marketplace-data:/pgdata

  ## 3rd party

  autoheal:
    image: willfarrell/autoheal
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    environment:
      - AUTOHEAL_START_PERIOD=60
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  ##
  ## Integration services
  ##

  ## Coinpayments

  coinpayments-deposit:
    image: tokend/coinpayments:0.4.9-rc.0
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/coinpayments-deposit.yaml:/config.yaml
    command: deposit
  coinpayments-deposit-verify:
    image: tokend/coinpayments:0.4.9-rc.0
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/coinpayments-deposit-verify.yaml:/config.yaml
    command: deposit-verify
  coinpayments-withdraw:
    image: tokend/coinpayments:0.4.9-rc.0
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/coinpayments-withdraw.yaml:/config.yaml
    command: withdraw
  coinpayments-atomic-swap-checker:
    image: tokend/coinpayments:0.4.9-rc.0
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/coinpayments-atomic-swap-checker.yaml:/config.yaml
    command: atomic-swap-checker
  coinpayments-atomic-swap-matcher:
    image: tokend/coinpayments:0.4.9-rc.0
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/coinpayments-atomic-swap-matcher.yaml:/config.yaml
    command: atomic-swap-matcher

  ## Ethereum
  erc20-deposit:
    image: tokend/erc20-deposit-svc:1.0.8
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    depends_on:
      - horizon
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/erc20-deposit.yaml:/config.yaml
    entrypoint: "erc20-deposit-svc"
    command: ["run", "deposit"]

  erc20-deployer:
    image: tokend/erc20-deposit-svc:1.0.8
    restart: on-failure
    labels:
      - "traefik.enabled=false"
    depends_on:
      - horizon
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/erc20-deposit.yaml:/config.yaml
    entrypoint: "erc20-deposit-svc"
    command: ["run", "deployer"]

  erc20-funnel:
    image: tokend/erc20-deposit-svc:1.0.8
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    depends_on:
      - horizon
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/erc20-deposit.yaml:/config.yaml
    entrypoint: "erc20-deposit-svc"
    command: ["run", "funnel"]

  erc20-withdraw:
    image: tokend/erc20-withdraw-svc:1.0.5
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    depends_on:
      - horizon
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/erc20-withdraw.yaml:/config.yaml
    entrypoint: "erc20-withdraw-svc"
    command: ["run", "withdraw"]

  erc721-deposit:
    image: registry.gitlab.com/tokend/blockparty/erc-721-deposit:7868c18b3af33e15cbac5ca5d3136ecf43216862
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    depends_on:
      - horizon
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/erc721-deposit.yaml:/config.yaml
    entrypoint: "erc-721-deposit"
    command: ["run", "deposit"]

  erc721-deployer:
    image: registry.gitlab.com/tokend/blockparty/erc-721-deposit:7868c18b3af33e15cbac5ca5d3136ecf43216862
    restart: on-failure
    labels:
      - "traefik.enabled=false"
    depends_on:
      - horizon
      - nft-svc
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/erc721-deposit.yaml:/config.yaml
    entrypoint: "erc-721-deposit"
    command: ["run", "deployer"]

  erc721-funnel:
    image: registry.gitlab.com/tokend/blockparty/erc-721-deposit:7868c18b3af33e15cbac5ca5d3136ecf43216862
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    depends_on:
      - horizon
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/erc721-deposit.yaml:/config.yaml
    entrypoint: "erc-721-deposit"
    command: ["run", "funnel"]

  erc721-withdraw:
    image: registry.gitlab.com/tokend/blockparty/erc-721-withdraw:cc2c4da817ea4be6c0e33559e096169069d3b7b0
    restart: unless-stopped
    labels:
      - "traefik.enabled=false"
    depends_on:
      - horizon
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/erc721-withdraw.yaml:/config.yaml
    entrypoint: "erc-721-withdraw"
    command: ["run", "withdraw"]

  stripe:
    image: registry.gitlab.com/tokend/psims/stripe-svc:8f33113418277059d8aad3c8bbd997bd952c7f85
    restart: unless-stopped
    volumes:
      - ./configs/stripe.yaml:/config.yaml
    environment:
      - KV_VIPER_FILE=/config.yaml
    entrypoint: stripe-svc
    command: run
    depends_on:
      - horizon

volumes:
  adks-data:
  api-data:
  core-data:
  horizon-data:
  storage-data:
  redis-data:
  nft-data:
  marketplace-data:
