version: '3.3'

services:
  api:
    image: registry.gitlab.com/tokend/api:d37c0de81d1c911bd841861d7182cbdec6ad2e3d
    restart: unless-stopped
    depends_on:
      - horizon
      - api_db
      - doorman
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/api.yaml:/config.yaml
    command: run
  api_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=api
      - POSTGRES_PASSWORD=api
      - POSTGRES_DB=api
      - PGDATA=/pgdata
    volumes:
      - api-data:/pgdata
    labels:
      - "traefik.enabled=false"
  doorman:
    image: khramov/doorman:0.0.2
    # image: registry.gitlab.com/tokend/accounts-ingester-svc:9b308d487ce8b7c18aed453b69c2a44d0e08803e
    restart: unless-stopped
    depends_on:
      - horizon
      - doorman_db
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/doorman.yaml:/config.yaml
    entrypoint: sh -c "accounts-ingester-svc migrate up && accounts-ingester-svc run"
  doorman_db:
    image: tokend/postgres-ubuntu:9.6
    labels:
      - "traefik.enabled=false"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=doorman
      - POSTGRES_PASSWORD=doorman
      - POSTGRES_DB=doorman
      - PGDATA=/pgdata
    volumes:
      - doorman-data:/pgdata
    labels:
      - "traefik.enabled=false"
  traefik:
    image: traefik:v2.0
    ports:
      - "80:80"
      - "8001:80"
      - "8080:8080"
    volumes:
      # - /var/run/docker.sock:/var/run/docker.sock
      - ./configs/traefik.yaml:/traefik.yaml
  cop:
    image: registry.gitlab.com/tokend/traefik-cop:fec7ae95c2395f99c6e570612e6220bf368da016
    restart: unless-stopped
    environment:
      - KV_VIPER_FILE=/config.yaml
    volumes:
      - ./configs/cop.yaml:/config.yaml
    entrypoint: sh -c "traefik-cop run"
  adks:
    image: tokend/adks:1.0.0
    restart: unless-stopped
    depends_on:
      - horizon
      - adks_db
    ports:
      - 8006:80
    volumes:
      - ./configs/adks.toml:/config.toml
  adks_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=adks
      - POSTGRES_PASSWORD=adks
      - POSTGRES_DB=adks
      - PGDATA=/pgdata
    labels:
      - "traefik.enabled=false"
    volumes:
      - adks-data:/pgdata
  redis:
    image: redis:5.0-alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    command:
      - redis-server
      - --appendonly
      - "yes"
  core:
    image: registry.gitlab.com/tokend/go-core:3cc0bc4cfd93fee8eadf3882c81a7f07017bfa9c
    depends_on:
      - core_db
    restart: unless-stopped
    environment:
      - ENSUREDB=1
      - KV_VIPER_FILE=config.yaml
    volumes:
      - ./configs/core.yaml:/config.yaml
    labels:
      - "autoheal=true"
    entrypoint: sh -c "go-core migrate up && go-core run"
  horizon:
    image: registry.gitlab.com/tokend/ingester:a38bc400bb161b3ac81a1388a500621a955dc28f
    depends_on:
      - core
      - horizon_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=horizon
      - POSTGRES_PASSWORD=horizon
      - POSTGRES_DB=horizon
      - PGDATA=/data/pgdata
      - KV_VIPER_FILE=config.yaml
    volumes:
      - ./configs/horizon.yaml:/config.yaml
      - horizon-data:/data
    entrypoint: sh -c "ingester migrate up && ingester run"
  core_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=core
      - POSTGRES_PASSWORD=core
      - POSTGRES_DB=core
      - PGDATA=/pgdata
    volumes:
      - core-data:/pgdata
    labels:
      - "traefik.enabled=false"
  horizon_db:
    image: tokend/postgres-ubuntu:9.6
    restart: unless-stopped
    environment:
      - POSTGRES_USER=horizon
      - POSTGRES_PASSWORD=horizon
      - POSTGRES_DB=horizon
      - PGDATA=/pgdata
    volumes:
      - horizon-data:/pgdata
    labels:
      - "traefik.enabled=false"
  initscripts:
    image: khramov/terraform-provider-tokend:0.0.4
    depends_on:
      - horizon
      - storage
    restart: on-failure
    volumes:
      - ./terraform:/opt/config
    entrypoint: ""
    command: /opt/config/apply.sh
  storage:
    image: minio/minio:RELEASE.2019-01-31T00-31-19Z
    restart: unless-stopped
    entrypoint: "sh"
    command: -c "mkdir -p /data/tfstate && minio server /data"
    environment:
      - MINIO_ACCESS_KEY=miniominio
      - MINIO_SECRET_KEY=sekritsekrit
      - MINIO_BROWSER=off
    volumes:
      - storage-data:/data

  ## 3rd party

  autoheal:
    image: willfarrell/autoheal
    restart: unless-stopped
    environment:
      - AUTOHEAL_START_PERIOD=60
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  adks-data:
  api-data:
  core-data:
  horizon-data:
  storage-data:
  redis-data:
  doorman-data:
